# @package _global_
defaults:
  - /evaluation_config
  - /experiment/slot_attention/_preprocessing_clevr
  - /dataset: clevr6
  - _self_

eval_batch_size: 16

save_outputs: true
skip_metrics: true
n_samples_to_store: 100
outputs_to_store:
  - input.orig_image
  - input.mask
  - masks_resized

hydra:
  run:
    dir: "${eval_lambda:'lambda a, b: a if a is not None else b',${output_dir},./outputs/evaluation/metrics/${now:%Y-%m-%d_%H-%M-%S}}"

modules:
  masks_resized:
    _target_: routed.ocl.utils.resizing.Resize
    input_path: object_decoder.masks
    size_tensor_path: input.mask
    patch_mode: false
    channels_last: false

dataset:
  eval_transforms:
    02a_preprocessing:
      _target_: ocl.transforms.Map
      transform: "${lambda_fn:'lambda data: {\"orig_image\": data[\"image\"], **data}'}"
      fields:
        - image
      batch_transform: false
    03_preprocessing:
      _target_: ocl.transforms.SimpleTransform
      transforms:
        orig_image:
          _target_: torchvision.transforms.Compose
          transforms:
            - _target_: torchvision.transforms.ToTensor
            - _target_: torchvision.transforms.CenterCrop
              size: [192, 192]
            - _target_: torchvision.transforms.Resize
              size: 128

        image:
          _target_: torchvision.transforms.Compose
          transforms:
            - _target_: torchvision.transforms.ToTensor
            - _target_: torchvision.transforms.CenterCrop
              size: [192, 192]
            - _target_: torchvision.transforms.Resize
              size: 128
            - _target_: torchvision.transforms.Normalize
              mean: [0.5, 0.5, 0.5]
              std: [0.5, 0.5, 0.5]
        mask:
          _target_: torchvision.transforms.Compose
          transforms:
            - _target_: ocl.preprocessing.MaskToTensor
            - _target_: torchvision.transforms.CenterCrop
              size: [192, 192]
            - _target_: ocl.preprocessing.ResizeNearestExact
              size: 128
      batch_transform: false